// <auto-generated />
using System;
using Adinux.Wasm.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adinux.Wasm.Server.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Adinux.Wasm.Server.Models.CatalogueRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CataloguesNames")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserFormId");

                    b.ToTable("CatalogueRequests");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.CatalogueRequestSendType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatalogueRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Error")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SendType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueRequestId");

                    b.ToTable("CatalogueRequestSendTypes");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.PriceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserFormId");

                    b.ToTable("PriceRequests");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.RepresentationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RepresentationPersonType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepresentationServiceType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserFormId");

                    b.ToTable("RepresentationRequests");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.ResumeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserFormId");

                    b.ToTable("ResumeRequests");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.ResumeRequestSendType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Error")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResumeRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SendType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResumeRequestId");

                    b.ToTable("ResumeRequestSendTypes");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.UserForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserForms");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.CatalogueRequest", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.UserForm", "UserForm")
                        .WithMany("CatalogueRequests")
                        .HasForeignKey("UserFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserForm");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.CatalogueRequestSendType", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.CatalogueRequest", "CatalogueRequest")
                        .WithMany("CatalogueRequestSendTypes")
                        .HasForeignKey("CatalogueRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogueRequest");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.PriceRequest", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.UserForm", "UserForm")
                        .WithMany("PriceRequests")
                        .HasForeignKey("UserFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserForm");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.RepresentationRequest", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.UserForm", "UserForm")
                        .WithMany("RepresentationRequests")
                        .HasForeignKey("UserFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserForm");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.ResumeRequest", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.UserForm", "UserForm")
                        .WithMany()
                        .HasForeignKey("UserFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserForm");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.ResumeRequestSendType", b =>
                {
                    b.HasOne("Adinux.Wasm.Server.Models.ResumeRequest", "ResumeRequest")
                        .WithMany("ResumeRequestSendTypes")
                        .HasForeignKey("ResumeRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResumeRequest");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.CatalogueRequest", b =>
                {
                    b.Navigation("CatalogueRequestSendTypes");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.ResumeRequest", b =>
                {
                    b.Navigation("ResumeRequestSendTypes");
                });

            modelBuilder.Entity("Adinux.Wasm.Server.Models.UserForm", b =>
                {
                    b.Navigation("CatalogueRequests");

                    b.Navigation("PriceRequests");

                    b.Navigation("RepresentationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
